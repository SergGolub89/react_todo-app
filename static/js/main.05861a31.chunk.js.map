{"version":3,"sources":["TodoItem.js","TodoApp.js","Footer.js","App.js","index.js"],"names":["TodoItem","_ref","todo","toggleTodo","destroyTodo","react_default","a","createElement","className","type","id","checked","completed","onChange","htmlFor","title","onClick","TodoApp","state","saveCurrentTodoValue","event","value","target","_this","setState","createTodo","preventDefault","props","addTodo","Object","objectSpread","Math","random","_this$props","this","todos","toggleAll","toggleAllIsActive","onSubmit","placeholder","style","display","map","src_TodoItem","key","React","Component","Footer","selectedFilter","todosFilter","clearCompleted","filter","length","href","App","filteredTodos","newTodo","prevState","concat","toConsumableArray","prevstate","every","_this$state","visibleTodos","src_TodoApp","src_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.05861a31.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TodoItem = ({ todo, toggleTodo, destroyTodo }) => (\n  <li>\n    <div className=\"view\">\n      <input\n        type=\"checkbox\"\n        className=\"toggle\"\n        id={todo.id}\n        checked={todo.completed}\n        onChange={() => toggleTodo(todo.id)}\n      />\n      {/* eslint-disable-next-line */}\n      <label htmlFor={todo.id}>\n        {todo.title}\n      </label>\n      <button\n        type=\"button\"\n        className=\"destroy\"\n        onClick={() => destroyTodo(todo.id)}\n      />\n    </div>\n  </li>\n);\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n  }),\n  toggleTodo: PropTypes.func,\n  destroyTodo: PropTypes.func,\n}.isRequired;\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport TodoItem from './TodoItem';\n\nclass TodoApp extends React.Component {\n  state = {\n    title: '',\n    id: 0,\n    completed: false,\n  }\n\n  saveCurrentTodoValue = (event) => {\n    const { value } = event.target;\n\n    this.setState({\n      title: value,\n    });\n  }\n\n  createTodo = (event) => {\n    event.preventDefault();\n\n    this.props.addTodo({\n      ...this.state,\n      id: Math.random() * 100,\n    });\n\n    this.setState({\n      title: '',\n    });\n  }\n\n  render() {\n    const {\n      todos,\n      toggleTodo,\n      toggleAll,\n      toggleAllIsActive,\n      destroyTodo,\n    } = this.props;\n\n    return (\n      <form onSubmit={this.createTodo}>\n        <header className=\"header\">\n          <h1>todos</h1>\n\n          <input\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={this.state.title}\n            onChange={this.saveCurrentTodoValue}\n          />\n        </header>\n\n        <section className=\"main\" style={{ display: 'block' }}>\n          <input\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            checked={toggleAllIsActive}\n            onChange={() => toggleAll(toggleAllIsActive)}\n          />\n          {/* eslint-disable-next-line */}\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n          <ul className=\"todo-list\">\n            {todos.map(todo => (\n              <TodoItem\n                key={todo.id}\n                todo={todo}\n                toggleTodo={toggleTodo}\n                destroyTodo={destroyTodo}\n              />\n            ))}\n          </ul>\n        </section>\n      </form>\n    );\n  }\n}\n\nTodoApp.propTypes = {\n  addTodo: PropTypes.func,\n  todos: PropTypes.arrayOf(PropTypes.object),\n  toggleTodo: PropTypes.func,\n  toggleAll: PropTypes.func,\n  toggleAllIsActive: PropTypes.func,\n  destroyTodo: PropTypes.func,\n}.isRequired;\n\nexport default TodoApp;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Footer extends React.Component {\n  state = {\n\n  }\n\n  render() {\n    const {\n      selectedFilter, todos, todosFilter, clearCompleted,\n    } = this.props;\n\n    return (\n      <footer className=\"footer\" style={{ display: 'block' }}>\n        <span className=\"todo-count\">\n          {(todos.filter(todo => todo.completed === false)).length}\n           items left\n        </span>\n\n        <ul className=\"filters\">\n          <li>\n            <a\n              href=\"#/\"\n              className={(selectedFilter === 'All') ? 'selected' : ''}\n              onClick={() => todosFilter('All')}\n            >\n              All\n            </a>\n          </li>\n\n          <li>\n            <a\n              href=\"#/active\"\n              onClick={() => todosFilter('Active')}\n              className={(selectedFilter === 'Active') ? 'selected' : ''}\n            >\n              Active\n            </a>\n          </li>\n\n          <li>\n            <a\n              href=\"#/completed\"\n              onClick={() => todosFilter('Completed')}\n              className={(selectedFilter === 'Completed') ? 'selected' : ''}\n            >\n              Completed\n            </a>\n          </li>\n        </ul>\n\n        <button\n          type=\"button\"\n          className=\"clear-completed\"\n          style={{ display: 'block' }}\n          onClick={clearCompleted}\n        >\n          Clear completed\n        </button>\n      </footer>\n    );\n  }\n}\n\nFooter.propTypes = {\n  selectedFilter: PropTypes.string,\n  todos: PropTypes.arrayOf(PropTypes.object),\n  todosFilter: PropTypes.func,\n  clearCompleted: PropTypes.func,\n}.isRequired;\n\nexport default Footer;\n","import React from 'react';\n\nimport TodoApp from './TodoApp';\nimport Footer from './Footer';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    filteredTodos: [],\n    selectedFilter: 'All',\n    toggleAllIsActive: false,\n  }\n\n  addTodo = (newTodo) => {\n    this.setState(prevState => ({\n      todos: [...prevState.todos, newTodo],\n    }));\n  }\n\n  toggleTodo = (id) => {\n    this.setState((prevstate) => {\n      const toggledTodos = prevstate.todos.map((todo) => {\n        if (todo.id !== id) {\n          return todo;\n        }\n\n        return {\n          ...todo,\n          completed: !todo.completed,\n        };\n      });\n\n      return {\n        todos: toggledTodos,\n        filteredTodos: this.todosFilter(prevstate.selectedFilter),\n      };\n    });\n\n    this.setState(prevstate => ({\n      toggleAllIsActive: (prevstate.todos.every(\n        todo => todo.completed === true\n      )) && true,\n    }));\n  }\n\n  toggleAll = (toggleAllIsActive) => {\n    (toggleAllIsActive !== true)\n      ? this.setState((prevState) => {\n        const completeAll = prevState.todos.map(todo => ({\n          ...todo,\n          completed: true,\n        }));\n\n        return {\n          todos: completeAll,\n          toggleAllIsActive: true,\n          filteredTodos: this.todosFilter(prevState.selectedFilter),\n        };\n      })\n      : this.setState((prevstate) => {\n        const remoteAll = prevstate.todos.map(todo => ({\n          ...todo,\n          completed: false,\n        }));\n\n        return {\n          todos: remoteAll,\n          toggleAllIsActive: false,\n          filteredTodos: this.todosFilter(prevstate.selectedFilter),\n        };\n      });\n  }\n\n  todosFilter = (value) => {\n    this.setState((prevstate) => {\n      switch (value) {\n        case 'Active':\n          return {\n            filteredTodos: prevstate.todos.filter(\n              todo => todo.completed === false\n            ),\n            selectedFilter: 'Active',\n          };\n\n        case 'Completed':\n          return {\n            filteredTodos: prevstate.todos.filter(\n              todo => todo.completed === true\n            ),\n            selectedFilter: 'Completed',\n          };\n\n        case 'All':\n          return {\n            filteredTodos: prevstate.todos,\n            selectedFilter: 'All',\n          };\n\n        default:\n          return {};\n      }\n    });\n  }\n\n  destroyTodo = (id) => {\n    this.setState(prevstate => ({\n      todos: prevstate.todos.filter(todo => todo.id !== id),\n      filteredTodos: this.todosFilter(prevstate.selectedFilter),\n    }));\n  }\n\n  clearCompleted = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => todo.completed === false),\n      filteredTodos: this.todosFilter(prevState.selectedFilter),\n    }));\n  }\n\n  render() {\n    const {\n      todos, selectedFilter, toggleAllIsActive, filteredTodos,\n    } = this.state;\n\n    const visibleTodos = (selectedFilter === 'All') ? todos : filteredTodos;\n\n    return (\n      <section className=\"todoapp\">\n        <TodoApp\n          todos={visibleTodos}\n          addTodo={this.addTodo}\n          toggleTodo={this.toggleTodo}\n          toggleAll={this.toggleAll}\n          toggleAllIsActive={toggleAllIsActive}\n          destroyTodo={this.destroyTodo}\n        />\n        <Footer\n          todos={todos}\n          todosFilter={this.todosFilter}\n          selectedFilter={selectedFilter}\n          clearCompleted={this.clearCompleted}\n        />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}